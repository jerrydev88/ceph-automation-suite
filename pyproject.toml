[project]
name = "ceph-automation-suite"
version = "1.0.0"
description = "Ceph 클러스터 운영을 위한 고급 Ansible 플레이북 모음"
authors = [
    { name = "Jerry", email = "jerrydev@mocomsys.com" }
]
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.8"
keywords = ["ceph", "ansible", "automation", "storage", "kubernetes"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Clustering",
]

dependencies = [
    "ansible>=2.11,<3.0",
    "ansible-core>=2.14",
    "netaddr>=0.8.0",
    "jinja2>=3.0",
    "pyyaml>=6.0",
    "jmespath>=0.10.0",
    "boto3>=1.17.0",
    "botocore>=1.20.0",
    "cryptography>=41.0.0",
    "paramiko>=3.0.0",
    "packaging>=21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-ansible>=3.0",
    "molecule>=5.0",
    "ansible-lint>=6.0",
    "yamllint>=1.32",
    "ruff>=0.1.0",
]

docs = [
    "mkdocs>=1.5",
    "mkdocs-material>=9.0",
    "mkdocs-mermaid2-plugin>=0.6",
]

[project.urls]
"Homepage" = "https://github.com/mocomsys/ceph-automation-suite"
"Bug Reports" = "https://github.com/mocomsys/ceph-automation-suite/issues"
"Source" = "https://github.com/mocomsys/ceph-automation-suite"
"Documentation" = "https://github.com/mocomsys/ceph-automation-suite/tree/main/docs"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "playbooks/**/*.yml",
    "playbooks/**/*.yaml",
    "inventory/*.yml.example",
    "group_vars/*.yml",
    "ansible.cfg",
    "README.md",
    "CLAUDE.md",
    "LICENSE",
]
exclude = [
    "*.pyc",
    "__pycache__",
    ".git",
    ".github",
    "tests",
    "docs",
    "*.swp",
    ".DS_Store",
]

[tool.ruff]
line-length = 120
target-version = "py38"

select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ansible-lint]
exclude_paths = [
    ".cache/",
    ".github/",
    "tests/",
]
skip_list = [
    "yaml[line-length]",
    "no-changed-when",
]

[tool.yamllint]
extends = "default"

[tool.yamllint.rules]
line-length = { max = 120, level = "warning" }
truthy = "disable"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --color=yes"